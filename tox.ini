[tox]
envlist =
    lint
    ;typing
    py-unit
    py-e2e

isolated_build = true
minversion = 3.20.0
skipsdist = true

[testenv]
description = run the pytest tests under {basepython}
skip_install = true
deps = -r requirements/tests.txt
commands =
    unit: pytest tests/unit
    e2e: pytest tests/e2e

[testenv:lint]
description = run code style and linting checks with pre-commit
skip_install = true
deps = -r requirements/linting.txt
commands =
    pre-commit run --all-files

[testenv:typing]
description = run typing checks with mypy
skip_install = true
deps = -r requirements/typing.txt
commands =
    mypy --config-file=mypy.ini --cache-dir=/dev/null --no-incremental

[testenv:docs]
description = generate Sphinx HTML documentation
skip_install = true
deps = -r requirements/docs.txt
allowlist_externals = make
commands =
    ;rm -f docs/ridgeplot.rst
	;rm -f docs/modules.rst
	;sphinx-apidoc -o docs/ ridgeplot
    make --directory=docs clean
    make --directory=docs html
    python "scripts/open_in_browser.py" "docs/build/html/index.html"
    ;sphinx-autobuild --open-browser --delay=0 docs docs/build/html

[testenv:build]
description = build source and wheel package
skip_install = true
deps = -r requirements/release.txt
commands =
    python -m build
    twine check --strict dist/*
    twine check --strict dist/*

[testenv:release-test]
description = package and upload a release to test pypi
depends = build
skip_install = true
deps = -r requirements/release.txt
commands =
    twine upload --verbose --repository testpypi -u '__token__' dist/*

[testenv:release-prod]
description = package and upload a release prod pypi
depends = build
skip_install = true
deps = -r requirements/release.txt
setenv   =
    TWINE_PASSWORD = {env:TWINE_PASSWORD}
commands =
    twine upload --verbose -u '__token__' dist/*

[testenv:upgrade-deps]
description = upgrade and lock dependencies
skip_install = true
deps = -r requirements/linting.txt
setenv   =
    TWINE_PASSWORD = {env:TWINE_PASSWORD}
commands =
    pre-commit autoupdate
    pip-compile-multi

[pytest]
minversion = 6.2
addopts = -ra --showlocals --strict-markers --import-mode=importlib --cov --cov-report=term-missing --cov-report=xml -vv
xfail_strict = true
filterwarnings =
    ignore::DeprecationWarning:patsy.*:

[coverage:run]
source = src/ridgeplot
branch = True

[coverage:report]
show_missing = true
precision = 2
exclude_lines =
    pragma: no cover
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    if self\.debug
    if __debug__
    if TYPE_CHECKING:
    @overload
    if sys.version_info
    # misc
    def __repr__
